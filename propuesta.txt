database.py
Este módulo configura la conexión a la base de datos SQLite:
Crea el engine para conectarse a SQLite.
Define SessionLocal, que se usa en los endpoints para interactuar con la base de datos.
Define Base, que es la base para todos los modelos de SQLAlchemy.

models.py
Define las tablas (modelos) de la base de datos usando SQLAlchemy:
Mesa: tabla de mesas (id, nombre, capacidad, estado).
Reserva: tabla de reservas con fechas, estado, cliente, etc.
Estos modelos se vinculan a la base de datos mediante Base de SQLAlchemy.

enums.py
Define enums para estados:
EstadoMesa: libre u ocupada.
EstadoReserva: confirmada, completada, cancelada.
Se usan en modelos y lógica de negocio para garantizar que solo se acepten valores válidos.

schemas.py
Define los modelos Pydantic para:
Validar y documentar las solicitudes (requests) y respuestas (responses) de la API.
Separar el modelo de entrada (por ejemplo, MesaBase, ReservaCreate) del de salida (MesaOut, ReservaOut).
Esto es esencial en FastAPI para el tipado y la generación automática de la documentación.

crud.py
Contiene la lógica de negocio o funciones CRUD (Create, Read, Update, Delete):
Obtener mesas.
Verificar disponibilidad.
Crear y cancelar reservas.
Actualizar el estado de una mesa.
Usa SQLAlchemy para interactuar con la base de datos.

main.py
Es el archivo principal que levanta FastAPI:
Define todos los endpoints RESTful.
Usa funciones de crud.py y modelos de schemas.py.
Usa Depends(get_db) para acceder a la base de datos por medio de SessionLocal.

init_db.py
Es un script de inicialización:
Crea las tablas si no existen (Base.metadata.create_all()).
Inserta algunas mesas de prueba en la base de datos.